server.port=8127
server.host=localhost
server.compression.enabled=true

logging.file=logs/node_${server.port}.out 

#This value should be the same for all the nodes and cannot be changed
node.noOfBuckets=64

node.currentNodeAddress.host=${server.host}
node.currentNodeAddress.port=${server.port}

#A list of nodes from which to initialize the Buckets To Nodes mapping of the current Node
#node.initializeFromNodes=localhost:8081,localhost:8082,localhost:8083
node.initializeFromNodes=

bucketsToNodes.storeDirectory=node_${server.port}/bucketsToNodes

#The rate in milliseconds between two buckets balancing
bucketsToNodes.balancing.rate=50000

#The delay in milliseconds for the first bucket balancing
bucketsToNodes.balancing.initialDelay=5000

# The number of time a bucket is replicated in the network for redundancy in case of failure 
bucketsToNodes.balancing.replicationFactor=2


keyValue.storeDirectory=target_${server.port}/keyValue

# The size of the gossips history. We need to have a history to avoid infinite loop of gossips into the network
gossip.doneSize=1000

# Rate between two sessions of gossip in milliseconds
gossip.fixedRate=500

bucketsSizeCache.refresh.rate=1000